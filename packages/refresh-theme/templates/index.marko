import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";

$ const { GAM } = out.global;

$ const {
  id,
  alias,
  name,
  pageNode,
} = data;

$ const adSlots = ({ aliases }) => ({
  "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-lb2": GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-lb3": GAM.getAdUnit({ name: "lb1", aliases }),
});

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-slots slots=adSlots({ aliases }) />
    </marko-web-resolve-page>
  </@head>
  <@page>
    <!-- Refresh sticky, right-rail infinite scroll ad -->
    <!-- <marko-web-gam-refresh-ad on="load-more-in-view" slot-id="gpt-ad-rail-infinite" /> -->

    <marko-web-resolve-page|{ data: section, resolved }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-page-wrapper>
        <@section>
          <div class="row">
            <div class="col">
              <marko-web-query|{ nodes }|
                name="website-optioned-content"
                params={ sectionId: id, optionName: "Pinned", excludeContentTypes: ["Company"], limit: 6, requiresImage: true, queryFragment }
              >
                <refresh-theme-content-hero-flow nodes=nodes />
              </marko-web-query>
            </div>
          </div>
        </@section>
        <@section>
          <div class="row">
            <div class="col">
              <marko-web-gam-display-ad id="gpt-ad-lb1" slots=adSlots({ aliases }) />
            </div>
          </div>
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
</marko-web-website-section-page-layout>
