import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";

$ const { GAM } = out.global;

$ const {
  id,
  alias,
  name,
  pageNode,
} = data;

$ const adSlots = ({ aliases }) => ({
  "gpt-ad-lb1": GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-lb2": GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-lb3": GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases }),
  "gpt-ad-rail-infinite": GAM.getAdUnit({ name: "infinite-rail", aliases }),
});

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-slots slots=adSlots({ aliases }) />
    </marko-web-resolve-page>
  </@head>
  <@page>
    <!-- Refresh sticky, right-rail infinite scroll ad -->
    <marko-web-gam-refresh-ad on="load-more-in-view" slot-id="gpt-ad-rail-infinite" />

    <marko-web-resolve-page|{ data: section, resolved }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-page-wrapper>
        <@section>
          <div class="row">
            <div class="col">
              <marko-web-query|{ nodes }|
                name="website-optioned-content"
                params={ sectionId: id, optionName: "Pinned", excludeContentTypes: ["Company"], limit: 6, requiresImage: true, queryFragment }
              >
                <refresh-theme-content-hero-flow nodes=nodes />
              </marko-web-query>
            </div>
          </div>
        </@section>

        <@section>
          <div class="row">
            <div class="col">
              <marko-web-gam-display-ad id="gpt-ad-lb1" slots=adSlots({ aliases }) />
            </div>
          </div>
        </@section>

        <@section modifiers=["card-deck"]>
          <marko-web-query|{ nodes }|
            name="website-optioned-content"
            params={ sectionId: id, optionName: "Pinned", excludeContentTypes: ["Company"], limit: 3, skip: 6, requiresImage: true, queryFragment }
          >
            <marko-web-node-list collapsible=false>
              <@header modifiers=["padding-y"]>Editor's Picks</@header>
            </marko-web-node-list>
            <default-theme-card-deck-flow cols=3 nodes=nodes>
              <@slot|{ node, index }|>
                <refresh-theme-content-card-node node=node>
                  <@image width=340 />
                </refresh-theme-content-card-node>
              </@slot>
            </default-theme-card-deck-flow>
          </marko-web-query>
        </@section>

        <@section>
          <div class="row">
            <div class="col">
              <marko-web-gam-display-ad id="gpt-ad-lb2" slots=adSlots({ aliases }) />
            </div>
          </div>
        </@section>

        <@section>
          <div class="row">
            <div class="col-lg-8">
              <marko-web-query|{ nodes }|
                name="all-published-content"
                params={ excludeContentTypes: ["Company", "Contact"], limit: 6, requiresImage: true, queryFragment }
              >
                <refresh-theme-latest-content-list-flow nodes=nodes with-header=true />
              </marko-web-query>
            </div>
            <aside class="col-lg-4 page-rail">
              <refresh-theme-follow-us-block />

              <marko-web-gam-display-ad
                id="gpt-ad-rail1"
                modifiers=["sticky-top"]
                slots=adSlots({ aliases })
              />
            </aside>
          </div>
        </@section>

         <@section>
          <div class="row">
            <div class="col">
              <refresh-theme-featured-videos-block />
            </div>
          </div>
        </@section>

        <@section>
          <div class="row">
            <div class="col">
              <marko-web-gam-display-ad id="gpt-ad-lb3" slots=adSlots({ aliases }) />
            </div>
          </div>
        </@section>

        <@section>
          <div class="row">
            <div class="col-lg-8 infinite-scroll-target">
              <marko-web-query|{ nodes }|
                name="all-published-content"
                params={ excludeContentTypes: ["Company", "Contact"], limit: 12, skip: 6, requiresImage: true, queryFragment }
              >
                <refresh-theme-content-list-flow
                  nodes=nodes
                  inner-justified=false
                  modifiers=["padding-large"]
                >
                  <@node image-position="left" with-attribution=true with-teaser=true>
                    <@image use-placeholder=false ar="16:9" width=288 />
                  </@node>
                </refresh-theme-content-list-flow>
              </marko-web-query>

              <refresh-theme-latest-content-load-more-block max-pages=1>
                <@query
                  name="all-published-content"
                  params={ excludeContentTypes: ["Company", "Contact"], limit: 12, skip: 18, requiresImage: true }
                />
                <@page for="website-section" id=id />
                <@adunit ...GAM.getAdUnit({ name: "infinite-interstitial", aliases }) />
              </refresh-theme-latest-content-load-more-block>
            </div>

            <aside class="col-lg-4 page-rail">
              <refresh-theme-most-read-block />

              <marko-web-gam-display-ad
                id="gpt-ad-rail-infinite"
                modifiers=["sticky-top"]
                slots=adSlots({ aliases })
              />
            </aside>
          </div>
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
</marko-web-website-section-page-layout>
