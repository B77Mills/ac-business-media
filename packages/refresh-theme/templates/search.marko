import { warn } from "@parameter1/base-cms-utils";
import { getAsObject, getAsArray, get } from "@parameter1/base-cms-object-path";
import queryFragment from "../graphql/fragments/content-list";
import categorySectionsFragment from "../graphql/fragments/search-sections"
import { getActiveSectionChildIds } from "../components/search/get-active-section-child-ids";

$ const { config, site, GAM, algoliaConfig, pagination: p, req } = out.global;
$ const sectionFilterIds = getAsArray(site, "config.sectionSearchIds")

$ const showAlgoliaSearch = (algoliaConfig && sectionFilterIds.length !== 0);

$ const supportedContendTypes = {
  Article: "Articles",
  Blog: "Blogs",
  Company: "Companies",
  Document: "Documents",
  News: "News",
  PressRelease: "Press Releases",
  Product: "Products",
  Video: "Videos",
  Webinar: "Webinars",
  Whitepaper: "White Papers",
};
$ const { phrase = "", contentType, sectionId } = req.query;
$ const perPage = 18;

$ const type = "search";
$ const title = "Search";
$ const description = `Search ${config.siteName()}`;
$ const apiKey = site.get("gcse.id");

<marko-web-default-page-layout type=type title=title description=description>
  <@head>
    <marko-web-gtm-default-context|{ context }| type=type>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-default-context>
  </@head>
  <@above-container>
    <refresh-theme-parsely-page headline=title />
  </@above-container>
  <@page>
    <marko-web-page-wrapper class="mb-block">
      <@section>
        <marko-web-gam-define-display-ad
          ...GAM.getAdUnit({ name: "lb1" })
          modifiers=["max-width-970", "center"]
        />
      </@section>


      <if(showAlgoliaSearch)>
        <@section>
          <div class="row">
            <div class="col">
              <default-theme-breadcrumbs-with-home>
                <@item>${title}</@item>
              </default-theme-breadcrumbs-with-home>
              <h1 class="page-wrapper__title">
                <if(p.page > 1)>${description}: Page ${p.page}</if>
                <else>${description}</else>
              </h1>
            </div>
          </div>
        </@section>
        <@section>
          <marko-web-query|{ nodes: sectionNodes }|
            name="website-sections"
            params={ includeIds: sectionFilterIds, limit: 100, queryFragment: categorySectionsFragment }
          >

            <div class="row">
              <div class="col-md-4">
                <div class="md-block">
                  <form method="GET" action=req.path class="search-form">
                    <div class="form-group search-form__group">
                      <label for="search-phrase" class="sr-only">Enter search phrase</label>
                      <input
                        id="search-phrase"
                        name="phrase"
                        type="search"
                        class="form-control"
                        value=phrase
                        placeholder="Enter search phrase..."
                      >
                    </div>
                    <if(contentType)>
                      <input type="hidden" name="contentType" value=contentType />
                    </if>
                    <if(sectionId)>
                      <input type="hidden" name="sectionId" value=sectionId />
                    </if>
                    <button type="submit" class="btn btn-primary search-form__btn">
                      Search
                    </button>
                  </form>
                </div>
                <div class="md-block">
                  <refresh-theme-content-search-content-type-filter supported-content-types=supportedContendTypes active-type=contentType />
                </div>
                <div class="mb-block">
                  <refresh-theme-search-section-facets req=req title="Sections" sections=sectionNodes active-id=sectionId/>
                </div>
              </div>
              <div class="col-md-8">
                $ const sectionIds = (sectionId) ? [sectionId, ...getActiveSectionChildIds(sectionNodes, sectionId)] : [];
                <refresh-theme-content-search-query|{ nodes, totalCount }|
                  phrase=phrase
                  supported-content-types=supportedContendTypes
                  section-ids=sectionIds
                  content-type=contentType
                  limit=perPage
                  skip=p.skip({ perPage })
                  query-fragment=queryFragment
                >
                  <marko-web-page-wrapper>
                    <@section modifiers=["search-results"]>
                      ${new Intl.NumberFormat().format(totalCount)} Results
                    </@section>
                    <@section>
                      <marko-web-node-list
                        inner-justified=true
                        flush-x=true
                        flush-y=false
                      >
                        <@nodes nodes=nodes>
                          <@slot|{ node }|>
                            <refresh-theme-content-list-node node=node />
                          </@slot>
                        </@nodes>
                      </marko-web-node-list>
                      <refresh-theme-pagination-controls
                        per-page=perPage
                        total-count=totalCount
                        path=req.path
                        query={ phrase }
                      />
                    </@section>
                  </marko-web-page-wrapper>
                </refresh-theme-content-search-query>
              </div>
            </div>
          </marko-web-query>
        </@section>
      </if>
      <else>
        <@section>
          <div class="row">
            <div class="col">
              <default-theme-breadcrumbs-with-home>
                <@item>${title}</@item>
              </default-theme-breadcrumbs-with-home>
              <h1 class="page-wrapper__title">${description}</h1>
            </div>
          </div>
        </@section>
        <@section>
          <div class="row">
            <div class="col">
              <if(apiKey)>
                <marko-web-gcse-simple-search-box api-key=apiKey />
              </if>
              <else>
                $ warn("Unable to load GCSE search: no `gcse.id` value was configured.");
              </else>
            </div>
          </div>
        </@section>
      </else>
    </marko-web-page-wrapper>
  </@page>
</marko-web-default-page-layout>
