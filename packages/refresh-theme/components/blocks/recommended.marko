import { getAsObject, get } from "@parameter1/base-cms-object-path";
import queryFragment from "../../graphql/fragments/content-list";
$ const { config } = out.global;

$ const useSectionAlias = ["53ca8d671784f8066eb2c949"].includes(get(config, 'websiteContext.id')) && input.sectionAlias;
$ const sectionAlias =  useSectionAlias ? input.sectionAlias : "home"

$ const params = {
  sectionAlias,
  optionName: "Recommended",
  limit: 3,
  skip: input.skip,
  requiresImage: true,
  queryFragment,
};

<marko-web-query|{ nodes }| name="website-scheduled-content" params=params>
  <marko-web-node-list collapsible=false>
    <@header modifiers=["padding-y"]>Recommended</@header>
  </marko-web-node-list>
  <refresh-theme-content-card-deck-flow nodes=nodes>
    <@native-x ...getAsObject(input, "nativeX") />
  </refresh-theme-content-card-deck-flow>
</marko-web-query>
