import { getAsArray } from "@base-cms/object-path";
import defaultValue from "@base-cms/marko-core/utils/default-value";
import convert from "@base-cms/marko-web-native-x/utils/convert-ad-to-content";

$ const {
  config,
  name,
  aliases,
  sectionName,
} = input;
$ const indices = defaultValue(input.indices, [0]);
$ const nodes = getAsArray(input, 'nodes');
$ const placement = config.getPlacement({ name, aliases });
$ const num = indices.length;
$ const { uri, id } = placement;
$ const opts = { ...placement.opts, n: num };
$ let n = 0;

$ const injectAds = (nodes, ads) => nodes.map((node, i) => {
  if (!indices.includes(i) || !ads[n] || !ads[n].hasCampaign) return node;
  const ad = ads[n];
  n += 1;
  return { ...convert(ad, { sectionName }), attributes: ad.attributes };
});

<if(config && num > 0 && uri && id)>
  <marko-web-native-x-fetch-elements|{ ads }| uri=uri id=id opts=opts>
    <${input.renderBody} nodes=injectAds(nodes, ads) />
  </marko-web-native-x-fetch-elements>
</if>
<else>
  <${input.renderBody} nodes=nodes />
</else>
