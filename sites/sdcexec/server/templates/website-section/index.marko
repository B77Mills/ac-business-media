import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../../graphql/fragments/content-list";
import GAM from "../../../config/gam";

$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
          "gpt-ad-lb1":   GAM.getAdUnit({ name: "lb1", aliases }),
          "gpt-ad-lb2":   GAM.getAdUnit({ name: "lb1", aliases }),
          "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases, size: [300, 250] }),
          "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases, size: [300, 600] }),
        }
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <!-- <@above-container>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "wa", aliases }) />
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "reskin", aliases }) />
    </marko-web-resolve-page>
  </@above-container> -->
  <@page>
    <marko-web-resolve-page|{ data: section, resolved }| node=pageNode>
      <marko-web-page-wrapper>
        <@section>
          <marko-web-node-list collapsible=false>
            <@header tag="h1" modifiers=["website-section-title", section.alias]>
              <marko-web-website-section-name tag=null obj=section />
            </@header>
          </marko-web-node-list>
          <div class="row">
            <div class="col">
              <marko-web-query|{ nodes }|
                name="website-optioned-content"
                params={ sectionId: id, optionName: "Pinned", limit: 6, requiresImage: true, queryFragment }
              >
                <website-content-hero-flow nodes=nodes />
              </marko-web-query>
            </div>
          </div>
        </@section>

        <@section>
          <div class="row">
            <div class="col">
              <marko-web-gam-display-ad id="gpt-ad-lb1" />
            </div>
          </div>
        </@section>

        <@section modifiers=["card-deck"]>
          <marko-web-query|{ nodes }|
            name="website-optioned-content"
            params={ sectionId: id, optionName: "Pinned", limit: 3, skip: 6, requiresImage: true, queryFragment }
          >
            <marko-web-node-list collapsible=false>
              <@header modifiers=["padding-y"]>Editor's Picks</@header>
            </marko-web-node-list>
            <default-theme-card-deck-flow cols=3 nodes=nodes>
              <@slot|{ node, index }|>
                <website-content-card-node
                  image-width=340
                  node=node
                />
              </@slot>
            </default-theme-card-deck-flow>
          </marko-web-query>
        </@section>

        <@section>
          <div class="row">
            <div class="col">
              <marko-web-gam-display-ad id="gpt-ad-lb2" />
            </div>
          </div>
        </@section>

        <@section>
          <div class="row">
            <div class="col-lg-8">
              <marko-web-query|{ nodes }|
                name="website-scheduled-content"
                params={ sectionId: id, limit: 6, skip: 9, requiresImage: true, queryFragment }
              >
                <website-content-list-flow
                  nodes=nodes
                  inner-justified=false
                  modifiers=["padding-large"]
                >
                  <@header>Latest</@header>
                  <@node image-position="left" with-attribution=true with-teaser=true>
                    <@image use-placeholder=false ar="16:9" width=288 />
                  </@node>
                </website-content-list-flow>
              </marko-web-query>
            </div>
            <aside class="col-lg-4 page-rail">
              <marko-web-node-list collapsible=false>
                <@header modifiers=["padding-y"]>Follow Us</@header>
              </marko-web-node-list>

              <marko-web-gam-display-ad id="gpt-ad-rail1" modifiers=["sticky-top"] />
            </aside>
          </div>
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>


  </@page>
  <!-- <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={
          aliases,
          nativeX: { index: 0, name: 'default', aliases },
        }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 10, skip: 5 }
        max-pages=5
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page>
  <@foot>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-fixed-ad-bottom ...GAM.getAdUnit({ name: "lb2", aliases }) refresh-interval=0 />
    </marko-web-resolve-page>
  </@foot> -->
</marko-web-website-section-page-layout>
