import queryFragment from "../../graphql/fragments/content-list";

$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
  </@head>
  <@page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      <marko-web-page-wrapper class="mb-block">
        <@section modifiers=["no-bottom-spacer"]>
          <marko-web-node-list collapsible=false>
            <@header tag="h1" modifiers=["website-section-title", section.alias]>
              <marko-web-website-section-name tag=null obj=section />
            </@header>
          </marko-web-node-list>
        </@section>

        <@section modifiers=["no-padding"]>
          <div class="row">
            <div class="col">
              <marko-web-query|{ nodes }|
                name="website-optioned-content"
                params={ sectionId: section.id, optionName: "Pinned", excludeContentTypes: ["Company"], limit: 1, queryFragment }
              >
                <website-content-hero-card-node node=nodes[0] />
              </marko-web-query>
            </div>
          </div>
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>

  <@below-page>
    <marko-web-query|{ nodes }|
      name="website-scheduled-content"
      params={ sectionId: id, limit: 12, queryFragment }
    >
      <website-content-card-deck-flow nodes=nodes />
    </marko-web-query>

    <marko-web-load-more
      max-pages=0
      component-name="content-card-deck-flow"
      fragment-name="content-list"
      query-name="website-scheduled-content"
      query-params={ sectionId: id, limit: 12, skip: 12 }
      page-input={ for: "section", id }
    />
  </@below-page>
</marko-web-website-section-page-layout>
